{"version":3,"sources":["lib/ui/View.js","lib/Midi.js","lib/instruments/Piano.js","components/PianoKeyboard.js","types/Note.js","lib/MidiInputManager.js","lib/Chords.js","App.js","index.js"],"names":["View","PureComponent","constructor","props","margin","top","right","bottom","left","rowSpan","columnSpan","canResizeRows","canResizeColumns","super","onResize","increaseRows","this","state","rowlimit","outerHeight","viewSize","newSpan","viewHeight","setState","height","decreaseRows","increaseColumns","columnLimit","outerWidth","viewWidth","width","decreaseColumns","close","toggleView","name","getSizeControlHTML","className","onClick","title","disabled","icon","faArrowsAltV","faLongArrowAltUp","faArrowsAltH","faLongArrowAltLeft","faTimesCircle","resizeComponent","additionalState","ow","oh","MidiNoteByPitch","Map","MidiNoteByLabel","MidiInstrumentByNumber","MidiInstrumentByNumberLev2","getMidiNoteByNr","nr","get","isSharp","SHARPS","has","MIDI_NOTES","pitch","octave","label","frequency","MIDI_INSTRUMENTS","number","group","MIDI_INSTRUMENTS_Lev2","subnumber","note","set","instrument","key","pianoPitchRange","minPitch","maxPitch","PianoKeyboard","componentDidUpdate","render","currentNotes","keyWidth","range","filter","d","length","blackKeyWidth","whiteKeys","blackKeys","labels","octaveMarkerPositions","currentX","black","x","y","w","h","push","color","textColor","borderRadius","newKey","rx","ry","fill","stroke","strokeWidth","fontSize","style","textAnchor","alignmentBaseline","writingMode","textOrientation","octaveMarkers","octaveMarkerLabels","yPos","i","gridArea","ref","n","svg","transform","Note","start","velocity","channel","end","object","undefined","console","error","clone","getDuration","getName","getLetter","getOctave","shiftTime","addedSeconds","scaleTime","factor","equals","otherNote","MidiInputManager","getMidiLiveData","setMidiLiveData","addCurrentNote","removeCurrentNote","_onMIDISuccess","midiAccess","groupCollapsed","inputs","size","input","values","log","onmidimessage","_handleMIDIMessage","groupEnd","message","device","target","command","data","time","timeStamp","_noteOff","_noteOn","navigator","requestMIDIAccess","then","_onMIDIFailure","alert","midiData","concat","setTimeout","index","warn","steps","suffix","App","Component","Math","floor","window","innerWidth","min","innerHeight","midiLiveData","newMap","delete","componentDidMount","addEventListener","s","notes","Array","from","sort","a","b","chord2","noteLetters","map","Chord","detect","getCHordType2","join","faInfoCircle","theme","href","faGithub","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.52f93cfa.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowsAltH, faArrowsAltV, faLongArrowAltLeft, faLongArrowAltUp, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class View extends PureComponent {\r\n\r\n    /**\r\n     * @param {Props} props props\r\n     * @param {Obbject} margin margin\r\n     * @param {number} rowSpan number of rows this view initially has\r\n     * @param {number} colSpan number of columns this view initially has\r\n     * @param {boolean} canResizeRows allow to resize rows?\r\n     * @param {boolean} canResizeColumns allow to resize columns?\r\n     */\r\n    constructor(\r\n        props,\r\n        margin = { top: 0, right: 0, bottom: 0, left: 0 },\r\n        rowSpan = 1,\r\n        columnSpan = 1,\r\n        canResizeRows = true,\r\n        canResizeColumns = true,\r\n    ) {\r\n        super(props);\r\n        const { outerWidth, outerHeight } = props.viewSize;\r\n        const viewWidth = outerWidth * columnSpan;\r\n        const viewHeight = outerHeight * rowSpan;\r\n        this.state = {\r\n            rowSpan,\r\n            columnSpan,\r\n            canResizeRows,\r\n            canResizeColumns,\r\n            rowlimit: 12,\r\n            columnLimit: 2,\r\n            outerWidth,\r\n            outerHeight,\r\n            viewHeight,\r\n            viewWidth,\r\n            margin,\r\n            width: (outerWidth * columnSpan) - margin.left - margin.right,\r\n            height: (outerHeight * rowSpan) - margin.top - margin.bottom,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Views shoud overwrite this method,\r\n     * to react to resizing.\r\n     * This method is called by resizeComponent (see below).\r\n     */\r\n    onResize = () => { }\r\n\r\n    /**\r\n     * Resizes the component by updating the width and height depending on\r\n     * the received outerWidth and outerHeight props and the internal margin.\r\n     * After updating the state, the callback function will be called.\r\n     * @param {Object} component\r\n     * @param {Function} callback\r\n     * @param {Object} additionalState other properties to set in the state\r\n     */\r\n    resizeComponent(additionalState = {}) {\r\n        const { outerWidth, outerHeight } = this.props.viewSize;\r\n        const { outerWidth: ow, outerHeight: oh, margin, rowSpan, columnSpan } = this.state;\r\n        if (ow !== outerWidth || oh !== outerHeight) {\r\n            const viewWidth = outerWidth * columnSpan;\r\n            const viewHeight = outerHeight * rowSpan;\r\n            this.setState(\r\n                {\r\n                    ...additionalState,\r\n                    outerWidth,\r\n                    outerHeight,\r\n                    viewWidth,\r\n                    viewHeight,\r\n                    width: (outerWidth * columnSpan) - margin.left - margin.right,\r\n                    height: (outerHeight * rowSpan) - margin.top - margin.bottom,\r\n                },\r\n                this.onResize\r\n            );\r\n        }\r\n    }\r\n\r\n    increaseRows = () => {\r\n        const { rowSpan, rowlimit, margin, canResizeRows } = this.state;\r\n        const { outerHeight } = this.props.viewSize;\r\n        if (!canResizeRows) { return; }\r\n        if (rowSpan >= rowlimit) { return; }\r\n        const newSpan = rowSpan + 1;\r\n        const viewHeight = outerHeight * newSpan;\r\n        this.setState(\r\n            {\r\n                rowSpan: newSpan,\r\n                viewHeight,\r\n                height: viewHeight - margin.top - margin.bottom\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    decreaseRows = () => {\r\n        const { rowSpan, margin, canResizeRows } = this.state;\r\n        const { outerHeight } = this.props.viewSize;\r\n        if (!canResizeRows) { return; }\r\n        if (rowSpan <= 1) { return; }\r\n        const newSpan = rowSpan - 1;\r\n        const viewHeight = outerHeight * newSpan;\r\n        this.setState(\r\n            {\r\n                rowSpan: newSpan,\r\n                viewHeight,\r\n                height: viewHeight - margin.top - margin.bottom\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    increaseColumns = () => {\r\n        const { columnSpan, columnLimit, margin, canResizeColumns } = this.state;\r\n        const { outerWidth } = this.props.viewSize;\r\n        if (!canResizeColumns) { return; }\r\n        if (columnSpan >= columnLimit) { return; }\r\n        const newSpan = columnSpan + 1;\r\n        const viewWidth = outerWidth * newSpan;\r\n        this.setState(\r\n            {\r\n                columnSpan: newSpan,\r\n                viewWidth,\r\n                width: viewWidth - margin.left - margin.right\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    decreaseColumns = () => {\r\n        const { columnSpan, margin, canResizeColumns } = this.state;\r\n        const { outerWidth } = this.props.viewSize;\r\n        if (!canResizeColumns) { return; }\r\n        if (columnSpan <= 1) { return; }\r\n        const newSpan = columnSpan - 1;\r\n        const viewWidth = outerWidth * newSpan;\r\n        this.setState(\r\n            {\r\n                columnSpan: newSpan,\r\n                viewWidth,\r\n                width: viewWidth - margin.left - margin.right\r\n            },\r\n            this.onResize\r\n        );\r\n    }\r\n\r\n    close = () => {\r\n        const { toggleView, name } = this.props;\r\n        if (toggleView && name) {\r\n            toggleView(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the HTML (JSX) for the view size control buttons\r\n     */\r\n    getSizeControlHTML = () => (\r\n        <div className='sizeControl'>\r\n            {this.state.canResizeRows && (\r\n                <span>\r\n                    <button\r\n                        onClick={this.increaseRows\r\n                        }\r\n                        title={'Increase rows'}\r\n                        disabled={this.state.rowSpan >= this.state.rowlimit}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowsAltV} />\r\n                    </button >\r\n                    <button\r\n                        onClick={this.decreaseRows}\r\n                        title={'Decrease rows'}\r\n                        disabled={this.state.rowSpan <= 1}\r\n                    >\r\n                        <FontAwesomeIcon icon={faLongArrowAltUp} />\r\n                    </button>\r\n                </span>\r\n            )}\r\n            {this.state.canResizeColumns && (\r\n                <span>\r\n                    <button\r\n                        onClick={this.increaseColumns}\r\n                        title={'Increase columns'}\r\n                        disabled={this.state.columnSpan >= this.state.columnLimit}\r\n                    >\r\n                        <FontAwesomeIcon icon={faArrowsAltH} />\r\n                    </button>\r\n                    <button\r\n                        onClick={this.decreaseColumns}\r\n                        title={'Decrease columns'}\r\n                        disabled={this.state.columnSpan <= 1}\r\n                    >\r\n                        <FontAwesomeIcon icon={faLongArrowAltLeft} />\r\n                    </button>\r\n                </span>\r\n            )}\r\n            <button\r\n                onClick={this.close}\r\n                title={'Close'}\r\n            >\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n            </button>\r\n        </div >\r\n    );\r\n}\r\n","/**\r\n * Lookup for many MIDI specifications.\r\n * Information from: https://soundprogramming.net/file-formats/\r\n */\r\n\r\n\r\nconst MidiNoteByPitch = new Map();\r\nconst MidiNoteByLabel = new Map();\r\nconst MidiInstrumentByNumber = new Map();\r\nconst MidiInstrumentByNumberLev2 = new Map();\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified number.\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {Object} note info, e.g.\r\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\nexport function getMidiNoteByNr(nr) {\r\n    return MidiNoteByPitch.get(nr);\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified label.\r\n * @param {string} label note label, e.g. 'D#0'\r\n *      (upper-case and sharp notation necessary)\r\n * @returns {Object} note info, e.g.\r\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\nexport function getMidiNoteByLabel(label) {\r\n    return MidiNoteByLabel.get(label);\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified name and octave.\r\n * @param {string} name note name, e.g. 'D#'\r\n *      (upper-case and sharp notation necessary)\r\n * @param {number} octave octave in [-1, 9]\r\n * @returns {Object} note info, e.g.\r\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\nexport function getMidiNoteByNameAndOctave(name, octave) {\r\n    return MidiNoteByLabel.get(`${name}${octave}`);\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument with the specified number.\r\n * @param {number} nr MIDI instrument number in [0, 127]\r\n * @returns {Object} note info, e.g.\r\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\r\n */\r\nexport function getMidiInstrumentByNr(nr) {\r\n    return MidiInstrumentByNumber.get(nr);\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument (MIDI level 2) with the\r\n * specified number.\r\n * @param {number} nr MIDI instrument number in [0, 127]\r\n * @param {number} nr MIDI instrument number in [0, 127]\r\n * @returns {Object} note info, e.g.\r\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\r\n */\r\nexport function getMidiInstrumentByNrL2(nr, subNr) {\r\n    const key = `${nr}-${subNr}`;\r\n    return MidiInstrumentByNumberLev2.get(key);\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument with the specified number.\r\n * @param {number} nr MIDI drum note number in [27, 87]\r\n * @returns {string} note name, e.g. 'Bass Drum 1\r\n */\r\nexport function getMidiDrumNoteByNr(nr) {\r\n    return GENERAL_MIDI_DRUM_NOTE_NUMBERS.get(nr);\r\n}\r\n\r\n/**\r\n * Returns true if a given MIDI pitch refers to a sharp note.\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {boolean} true if sharp, false otherwise\r\n */\r\nexport function isSharp(nr) {\r\n    return SHARPS.has(nr);\r\n}\r\n\r\n/**\r\n * Returns a note name such as 'C#' (without octave) for a given MIDI\r\n * note number.\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {string} note name such as 'C#'\r\n */\r\nexport function getNoteNameFromNoteNr(nr) {\r\n    return NOTE_NAMES[nr % 12];\r\n}\r\n\r\n\r\n\r\n/**\r\n * Below here are only arrays with information and lookup-map-building code\r\n */\r\n\r\nexport const NOTE_NAMES = [\r\n    'C',\r\n    'C#',\r\n    'D',\r\n    'D#',\r\n    'E',\r\n    'F',\r\n    'F#',\r\n    'G',\r\n    'G#',\r\n    'A',\r\n    'A#',\r\n    'B',\r\n];\r\n\r\nconst MIDI_NOTES = [\r\n    { pitch: 0, name: 'C', octave: -1, label: 'C-1', frequency: 8.176 },\r\n    { pitch: 1, name: 'C#', octave: -1, label: 'C#-1', frequency: 8.662 },\r\n    { pitch: 2, name: 'D', octave: -1, label: 'D-1', frequency: 9.177 },\r\n    { pitch: 3, name: 'D#', octave: -1, label: 'D#-1', frequency: 9.723 },\r\n    { pitch: 4, name: 'E', octave: -1, label: 'E-1', frequency: 10.301 },\r\n    { pitch: 5, name: 'F', octave: -1, label: 'F-1', frequency: 10.913 },\r\n    { pitch: 6, name: 'F#', octave: -1, label: 'F#-1', frequency: 11.562 },\r\n    { pitch: 7, name: 'G', octave: -1, label: 'G-1', frequency: 12.250 },\r\n    { pitch: 8, name: 'G#', octave: -1, label: 'G#-1', frequency: 12.978 },\r\n    { pitch: 9, name: 'A', octave: -1, label: 'A-1', frequency: 13.750 },\r\n    { pitch: 10, name: 'A#', octave: -1, label: 'A#-1', frequency: 14.568 },\r\n    { pitch: 11, name: 'B', octave: -1, label: 'B-1', frequency: 15.434 },\r\n    { pitch: 12, name: 'C', octave: 0, label: 'C0', frequency: 16.352 },\r\n    { pitch: 13, name: 'C#', octave: 0, label: 'C#0', frequency: 17.324 },\r\n    { pitch: 14, name: 'D', octave: 0, label: 'D0', frequency: 18.354 },\r\n    { pitch: 15, name: 'D#', octave: 0, label: 'D#0', frequency: 19.445 },\r\n    { pitch: 16, name: 'E', octave: 0, label: 'E0', frequency: 20.602 },\r\n    { pitch: 17, name: 'F', octave: 0, label: 'F0', frequency: 21.827 },\r\n    { pitch: 18, name: 'F#', octave: 0, label: 'F#0', frequency: 23.125 },\r\n    { pitch: 19, name: 'G', octave: 0, label: 'G0', frequency: 24.500 },\r\n    { pitch: 20, name: 'G#', octave: 0, label: 'G#0', frequency: 25.957 },\r\n    { pitch: 21, name: 'A', octave: 0, label: 'A0', frequency: 27.500 },\r\n    { pitch: 22, name: 'A#', octave: 0, label: 'A#0', frequency: 29.135 },\r\n    { pitch: 23, name: 'B', octave: 0, label: 'B0', frequency: 30.868 },\r\n    { pitch: 24, name: 'C', octave: 1, label: 'C1', frequency: 32.703 },\r\n    { pitch: 25, name: 'C#', octave: 1, label: 'C#1', frequency: 34.648 },\r\n    { pitch: 26, name: 'D', octave: 1, label: 'D1', frequency: 36.708 },\r\n    { pitch: 27, name: 'D#', octave: 1, label: 'D#1', frequency: 38.891 },\r\n    { pitch: 28, name: 'E', octave: 1, label: 'E1', frequency: 41.203 },\r\n    { pitch: 29, name: 'F', octave: 1, label: 'F1', frequency: 43.654 },\r\n    { pitch: 30, name: 'F#', octave: 1, label: 'F#1', frequency: 46.249 },\r\n    { pitch: 31, name: 'G', octave: 1, label: 'G1', frequency: 48.999 },\r\n    { pitch: 32, name: 'G#', octave: 1, label: 'G#1', frequency: 51.913 },\r\n    { pitch: 33, name: 'A', octave: 1, label: 'A1', frequency: 55.000 },\r\n    { pitch: 34, name: 'A#', octave: 1, label: 'A#1', frequency: 58.270 },\r\n    { pitch: 35, name: 'B', octave: 1, label: 'B1', frequency: 61.735 },\r\n    { pitch: 36, name: 'C', octave: 2, label: 'C2', frequency: 65.406 },\r\n    { pitch: 37, name: 'C#', octave: 2, label: 'C#2', frequency: 69.296 },\r\n    { pitch: 38, name: 'D', octave: 2, label: 'D2', frequency: 73.416 },\r\n    { pitch: 39, name: 'D#', octave: 2, label: 'D#2', frequency: 77.782 },\r\n    { pitch: 40, name: 'E', octave: 2, label: 'E2', frequency: 82.407 },\r\n    { pitch: 41, name: 'F', octave: 2, label: 'F2', frequency: 87.307 },\r\n    { pitch: 42, name: 'F#', octave: 2, label: 'F#2', frequency: 92.499 },\r\n    { pitch: 43, name: 'G', octave: 2, label: 'G2', frequency: 97.999 },\r\n    { pitch: 44, name: 'G#', octave: 2, label: 'G#2', frequency: 103.826 },\r\n    { pitch: 45, name: 'A', octave: 2, label: 'A2', frequency: 110.000 },\r\n    { pitch: 46, name: 'A#', octave: 2, label: 'A#2', frequency: 116.541 },\r\n    { pitch: 47, name: 'B', octave: 2, label: 'B2', frequency: 123.471 },\r\n    { pitch: 48, name: 'C', octave: 3, label: 'C3', frequency: 130.813 },\r\n    { pitch: 49, name: 'C#', octave: 3, label: 'C#3', frequency: 138.591 },\r\n    { pitch: 50, name: 'D', octave: 3, label: 'D3', frequency: 146.832 },\r\n    { pitch: 51, name: 'D#', octave: 3, label: 'D#3', frequency: 155.563 },\r\n    { pitch: 52, name: 'E', octave: 3, label: 'E3', frequency: 164.814 },\r\n    { pitch: 53, name: 'F', octave: 3, label: 'F3', frequency: 174.614 },\r\n    { pitch: 54, name: 'F#', octave: 3, label: 'F#3', frequency: 184.997 },\r\n    { pitch: 55, name: 'G', octave: 3, label: 'G3', frequency: 195.998 },\r\n    { pitch: 56, name: 'G#', octave: 3, label: 'G#3', frequency: 207.652 },\r\n    { pitch: 57, name: 'A', octave: 3, label: 'A3', frequency: 220.000 },\r\n    { pitch: 58, name: 'A#', octave: 3, label: 'A#3', frequency: 233.082 },\r\n    { pitch: 59, name: 'B', octave: 3, label: 'B3', frequency: 246.942 },\r\n    { pitch: 60, name: 'C', octave: 4, label: 'C4', frequency: 261.626 },\r\n    { pitch: 61, name: 'C#', octave: 4, label: 'C#4', frequency: 277.183 },\r\n    { pitch: 62, name: 'D', octave: 4, label: 'D4', frequency: 293.665 },\r\n    { pitch: 63, name: 'D#', octave: 4, label: 'D#4', frequency: 311.127 },\r\n    { pitch: 64, name: 'E', octave: 4, label: 'E4', frequency: 329.628 },\r\n    { pitch: 65, name: 'F', octave: 4, label: 'F4', frequency: 349.228 },\r\n    { pitch: 66, name: 'F#', octave: 4, label: 'F#4', frequency: 369.994 },\r\n    { pitch: 67, name: 'G', octave: 4, label: 'G4', frequency: 391.995 },\r\n    { pitch: 68, name: 'G#', octave: 4, label: 'G#4', frequency: 415.305 },\r\n    { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 },\r\n    { pitch: 70, name: 'A#', octave: 4, label: 'A#4', frequency: 466.164 },\r\n    { pitch: 71, name: 'B', octave: 4, label: 'B4', frequency: 493.883 },\r\n    { pitch: 72, name: 'C', octave: 5, label: 'C5', frequency: 523.251 },\r\n    { pitch: 73, name: 'C#', octave: 5, label: 'C#5', frequency: 554.365 },\r\n    { pitch: 74, name: 'D', octave: 5, label: 'D5', frequency: 587.330 },\r\n    { pitch: 75, name: 'D#', octave: 5, label: 'D#5', frequency: 622.254 },\r\n    { pitch: 76, name: 'E', octave: 5, label: 'E5', frequency: 659.255 },\r\n    { pitch: 77, name: 'F', octave: 5, label: 'F5', frequency: 698.456 },\r\n    { pitch: 78, name: 'F#', octave: 5, label: 'F#5', frequency: 739.989 },\r\n    { pitch: 79, name: 'G', octave: 5, label: 'G5', frequency: 783.991 },\r\n    { pitch: 80, name: 'G#', octave: 5, label: 'G#5', frequency: 830.609 },\r\n    { pitch: 81, name: 'A', octave: 5, label: 'A5', frequency: 880.000 },\r\n    { pitch: 82, name: 'A#', octave: 5, label: 'A#5', frequency: 932.328 },\r\n    { pitch: 83, name: 'B', octave: 5, label: 'B5', frequency: 987.767 },\r\n    { pitch: 84, name: 'C', octave: 6, label: 'C6', frequency: 1046.502 },\r\n    { pitch: 85, name: 'C#', octave: 6, label: 'C#6', frequency: 1108.731 },\r\n    { pitch: 86, name: 'D', octave: 6, label: 'D6', frequency: 1174.659 },\r\n    { pitch: 87, name: 'D#', octave: 6, label: 'D#6', frequency: 1244.508 },\r\n    { pitch: 88, name: 'E', octave: 6, label: 'E6', frequency: 1318.510 },\r\n    { pitch: 89, name: 'F', octave: 6, label: 'F6', frequency: 1396.913 },\r\n    { pitch: 90, name: 'F#', octave: 6, label: 'F#6', frequency: 1479.978 },\r\n    { pitch: 91, name: 'G', octave: 6, label: 'G6', frequency: 1567.982 },\r\n    { pitch: 92, name: 'G#', octave: 6, label: 'G#6', frequency: 1661.219 },\r\n    { pitch: 93, name: 'A', octave: 6, label: 'A6', frequency: 1760.000 },\r\n    { pitch: 94, name: 'A#', octave: 6, label: 'A#6', frequency: 1864.655 },\r\n    { pitch: 95, name: 'B', octave: 6, label: 'B6', frequency: 1975.533 },\r\n    { pitch: 96, name: 'C', octave: 7, label: 'C7', frequency: 2093.005 },\r\n    { pitch: 97, name: 'C#', octave: 7, label: 'C#7', frequency: 2217.461 },\r\n    { pitch: 98, name: 'D', octave: 7, label: 'D7', frequency: 2349.318 },\r\n    { pitch: 99, name: 'D#', octave: 7, label: 'D#7', frequency: 2489.016 },\r\n    { pitch: 100, name: 'E', octave: 7, label: 'E7', frequency: 2637.020 },\r\n    { pitch: 101, name: 'F', octave: 7, label: 'F7', frequency: 2793.826 },\r\n    { pitch: 102, name: 'F#', octave: 7, label: 'F#7', frequency: 2959.955 },\r\n    { pitch: 103, name: 'G', octave: 7, label: 'G7', frequency: 3135.963 },\r\n    { pitch: 104, name: 'G#', octave: 7, label: 'G#7', frequency: 3322.438 },\r\n    { pitch: 105, name: 'A', octave: 7, label: 'A7', frequency: 3520.000 },\r\n    { pitch: 106, name: 'A#', octave: 7, label: 'A#7', frequency: 3729.310 },\r\n    { pitch: 107, name: 'B', octave: 7, label: 'B7', frequency: 3951.066 },\r\n    { pitch: 108, name: 'C', octave: 8, label: 'C8', frequency: 4186.009 },\r\n    { pitch: 109, name: 'C#', octave: 8, label: 'C#8', frequency: 4434.922 },\r\n    { pitch: 110, name: 'D', octave: 8, label: 'D8', frequency: 4698.636 },\r\n    { pitch: 111, name: 'D#', octave: 8, label: 'D#8', frequency: 4978.032 },\r\n    { pitch: 112, name: 'E', octave: 8, label: 'E8', frequency: 5274.041 },\r\n    { pitch: 113, name: 'F', octave: 8, label: 'F8', frequency: 5587.652 },\r\n    { pitch: 114, name: 'F#', octave: 8, label: 'F#8', frequency: 5919.911 },\r\n    { pitch: 115, name: 'G', octave: 8, label: 'G8', frequency: 6271.927 },\r\n    { pitch: 116, name: 'G#', octave: 8, label: 'G#8', frequency: 6644.875 },\r\n    { pitch: 117, name: 'A', octave: 8, label: 'A8', frequency: 7040.000 },\r\n    { pitch: 118, name: 'A#', octave: 8, label: 'A#8', frequency: 7458.620 },\r\n    { pitch: 119, name: 'B', octave: 8, label: 'B8', frequency: 7902.133 },\r\n    { pitch: 120, name: 'C', octave: 9, label: 'C9', frequency: 8372.018 },\r\n    { pitch: 121, name: 'C#', octave: 9, label: 'C#9', frequency: 8869.844 },\r\n    { pitch: 122, name: 'D', octave: 9, label: 'D9', frequency: 9397.273 },\r\n    { pitch: 123, name: 'D#', octave: 9, label: 'D#9', frequency: 9956.063 },\r\n    { pitch: 124, name: 'E', octave: 9, label: 'E9', frequency: 10548.080 },\r\n    { pitch: 125, name: 'F', octave: 9, label: 'F9', frequency: 11175.300 },\r\n    { pitch: 126, name: 'F#', octave: 9, label: 'F#9', frequency: 11839.820 },\r\n    { pitch: 127, name: 'G', octave: 9, label: 'G9', frequency: 12543.850 },\r\n];\r\n\r\nexport const SHARPS = new Map([\r\n    [1, null],\r\n    [3, null],\r\n    [6, null],\r\n    [8, null],\r\n    [10, null],\r\n    [13, null],\r\n    [15, null],\r\n    [18, null],\r\n    [20, null],\r\n    [22, null],\r\n    [25, null],\r\n    [27, null],\r\n    [30, null],\r\n    [32, null],\r\n    [34, null],\r\n    [37, null],\r\n    [39, null],\r\n    [42, null],\r\n    [44, null],\r\n    [46, null],\r\n    [49, null],\r\n    [51, null],\r\n    [54, null],\r\n    [56, null],\r\n    [58, null],\r\n    [61, null],\r\n    [63, null],\r\n    [66, null],\r\n    [68, null],\r\n    [70, null],\r\n    [73, null],\r\n    [75, null],\r\n    [78, null],\r\n    [80, null],\r\n    [82, null],\r\n    [85, null],\r\n    [87, null],\r\n    [90, null],\r\n    [92, null],\r\n    [94, null],\r\n    [97, null],\r\n    [99, null],\r\n    [102, null],\r\n    [104, null],\r\n    [106, null],\r\n    [109, null],\r\n    [111, null],\r\n    [114, null],\r\n    [116, null],\r\n    [118, null],\r\n    [121, null],\r\n    [123, null],\r\n    [126, null]\r\n]);\r\n\r\nconst MIDI_INSTRUMENTS = [\r\n    { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\r\n    { number: 1, group: 'Piano', label: 'Bright Acoustic Piano' },\r\n    { number: 2, group: 'Piano', label: 'Electric Grand Piano' },\r\n    { number: 3, group: 'Piano', label: 'Honky-tonk Piano' },\r\n    { number: 4, group: 'Piano', label: 'Electric Piano 1' },\r\n    { number: 5, group: 'Piano', label: 'Electric Piano 2' },\r\n    { number: 6, group: 'Piano', label: 'Harpsichord' },\r\n    { number: 7, group: 'Piano', label: 'Clavinet' },\r\n    { number: 8, group: 'Chromatic Percussion', label: 'Celesta' },\r\n    { number: 9, group: 'Chromatic Percussion', label: 'Glockenspiel' },\r\n    { number: 10, group: 'Chromatic Percussion', label: 'Music Box' },\r\n    { number: 11, group: 'Chromatic Percussion', label: 'Vibraphone' },\r\n    { number: 12, group: 'Chromatic Percussion', label: 'Marimba' },\r\n    { number: 13, group: 'Chromatic Percussion', label: 'Xylophone' },\r\n    { number: 14, group: 'Chromatic Percussion', label: 'Tubular Bells' },\r\n    { number: 15, group: 'Chromatic Percussion', label: 'Dulcimer' },\r\n    { number: 16, group: 'Organ', label: 'Drawbar Organ' },\r\n    { number: 17, group: 'Organ', label: 'Percussive Organ' },\r\n    { number: 18, group: 'Organ', label: 'Rock Organ' },\r\n    { number: 19, group: 'Organ', label: 'Church Organ' },\r\n    { number: 20, group: 'Organ', label: 'Reed Organ' },\r\n    { number: 21, group: 'Organ', label: 'Accordion' },\r\n    { number: 22, group: 'Organ', label: 'Harmonica' },\r\n    { number: 23, group: 'Organ', label: 'Tango Accordion' },\r\n    { number: 24, group: 'Guitar', label: 'Acoustic Guitar(nylon)' },\r\n    { number: 25, group: 'Guitar', label: 'Acoustic Guitar(steel)' },\r\n    { number: 26, group: 'Guitar', label: 'Electric Guitar(jazz)' },\r\n    { number: 27, group: 'Guitar', label: 'Electric Guitar(clean)' },\r\n    { number: 28, group: 'Guitar', label: 'Electric Guitar(muted)' },\r\n    { number: 29, group: 'Guitar', label: 'Overdriven Guitar' },\r\n    { number: 30, group: 'Guitar', label: 'Distortion Guitar' },\r\n    { number: 31, group: 'Guitar', label: 'Guitar harmonics' },\r\n    { number: 32, group: 'Bass', label: 'Acoustic Bass' },\r\n    { number: 33, group: 'Bass', label: 'Electric Bass(finger)' },\r\n    { number: 34, group: 'Bass', label: 'Electric Bass(pick)' },\r\n    { number: 35, group: 'Bass', label: 'Fretless Bass' },\r\n    { number: 36, group: 'Bass', label: 'Slap Bass 1' },\r\n    { number: 37, group: 'Bass', label: 'Slap Bass 2' },\r\n    { number: 38, group: 'Bass', label: 'Synth Bass 1' },\r\n    { number: 39, group: 'Bass', label: 'Synth Bass 2' },\r\n    { number: 40, group: 'Strings', label: 'Violin' },\r\n    { number: 41, group: 'Strings', label: 'Viola' },\r\n    { number: 42, group: 'Strings', label: 'Cello' },\r\n    { number: 43, group: 'Strings', label: 'Contrabass' },\r\n    { number: 44, group: 'Strings', label: 'Tremolo Strings' },\r\n    { number: 45, group: 'Strings', label: 'Pizzicato Strings' },\r\n    { number: 46, group: 'Strings', label: 'Orchestral Harp' },\r\n    { number: 47, group: 'Strings', label: 'Timpani' },\r\n    { number: 48, group: 'Strings (continued)', label: 'String Ensemble 1' },\r\n    { number: 49, group: 'Strings (continued)', label: 'String Ensemble 2' },\r\n    { number: 50, group: 'Strings (continued)', label: 'Synth Strings 1' },\r\n    { number: 51, group: 'Strings (continued)', label: 'Synth Strings 2' },\r\n    { number: 52, group: 'Strings (continued)', label: 'Choir Aahs' },\r\n    { number: 53, group: 'Strings (continued)', label: 'Voice Oohs' },\r\n    { number: 54, group: 'Strings (continued)', label: 'Synth Voice' },\r\n    { number: 55, group: 'Strings (continued)', label: 'Orchestra Hit' },\r\n    { number: 56, group: 'Brass', label: 'Trumpet' },\r\n    { number: 57, group: 'Brass', label: 'Trombone' },\r\n    { number: 58, group: 'Brass', label: 'Tuba' },\r\n    { number: 59, group: 'Brass', label: 'Muted Trumpet' },\r\n    { number: 60, group: 'Brass', label: 'French Horn' },\r\n    { number: 61, group: 'Brass', label: 'Brass Section' },\r\n    { number: 62, group: 'Brass', label: 'Synth Brass 1' },\r\n    { number: 63, group: 'Brass', label: 'Synth Brass 2' },\r\n    { number: 64, group: 'Reed', label: 'Soprano Sax' },\r\n    { number: 65, group: 'Reed', label: 'Alto Sax' },\r\n    { number: 66, group: 'Reed', label: 'Tenor Sax' },\r\n    { number: 67, group: 'Reed', label: 'Baritone Sax' },\r\n    { number: 68, group: 'Reed', label: 'Oboe' },\r\n    { number: 69, group: 'Reed', label: 'English Horn' },\r\n    { number: 70, group: 'Reed', label: 'Bassoon' },\r\n    { number: 71, group: 'Reed', label: 'Clarinet' },\r\n    { number: 72, group: 'Pipe', label: 'Piccolo' },\r\n    { number: 73, group: 'Pipe', label: 'Flute' },\r\n    { number: 74, group: 'Pipe', label: 'Recorder' },\r\n    { number: 75, group: 'Pipe', label: 'Pan Flute' },\r\n    { number: 76, group: 'Pipe', label: 'Blown Bottle' },\r\n    { number: 77, group: 'Pipe', label: 'Shakuhachi' },\r\n    { number: 78, group: 'Pipe', label: 'Whistle' },\r\n    { number: 79, group: 'Pipe', label: 'Ocarina' },\r\n    { number: 80, group: 'Synth Lead', label: 'Lead 1(square)' },\r\n    { number: 81, group: 'Synth Lead', label: 'Lead 2(sawtooth)' },\r\n    { number: 82, group: 'Synth Lead', label: 'Lead 3(calliope)' },\r\n    { number: 83, group: 'Synth Lead', label: 'Lead 4(chiff)' },\r\n    { number: 84, group: 'Synth Lead', label: 'Lead 5(charang)' },\r\n    { number: 85, group: 'Synth Lead', label: 'Lead 6(voice)' },\r\n    { number: 86, group: 'Synth Lead', label: 'Lead 7(fifths)' },\r\n    { number: 87, group: 'Synth Lead', label: 'Lead 8(bass + lead)' },\r\n    { number: 88, group: 'Synth Pad', label: 'Pad 1(new age)' },\r\n    { number: 89, group: 'Synth Pad', label: 'Pad 2(warm)' },\r\n    { number: 90, group: 'Synth Pad', label: 'Pad 3(polysynth)' },\r\n    { number: 91, group: 'Synth Pad', label: 'Pad 4(choir)' },\r\n    { number: 92, group: 'Synth Pad', label: 'Pad 5(bowed)' },\r\n    { number: 93, group: 'Synth Pad', label: 'Pad 6(metallic)' },\r\n    { number: 94, group: 'Synth Pad', label: 'Pad 7(halo)' },\r\n    { number: 95, group: 'Synth Pad', label: 'Pad 8(sweep)' },\r\n    { number: 96, group: 'Synth Effects', label: 'FX 1(rain)' },\r\n    { number: 97, group: 'Synth Effects', label: 'FX 2(soundtrack)' },\r\n    { number: 98, group: 'Synth Effects', label: 'FX 3(crystal)' },\r\n    { number: 99, group: 'Synth Effects', label: 'FX 4(atmosphere)' },\r\n    { number: 100, group: 'Synth Effects', label: 'FX 5(brightness)' },\r\n    { number: 101, group: 'Synth Effects', label: 'FX 6(goblins)' },\r\n    { number: 102, group: 'Synth Effects', label: 'FX 7(echoes)' },\r\n    { number: 103, group: 'Synth Effects', label: 'FX 8(sci-fi)' },\r\n    { number: 104, group: 'Ethnic', label: 'Sitar' },\r\n    { number: 105, group: 'Ethnic', label: 'Banjo' },\r\n    { number: 106, group: 'Ethnic', label: 'Shamisen' },\r\n    { number: 107, group: 'Ethnic', label: 'Koto' },\r\n    { number: 108, group: 'Ethnic', label: 'Kalimba' },\r\n    { number: 109, group: 'Ethnic', label: 'Bag pipe' },\r\n    { number: 110, group: 'Ethnic', label: 'Fiddle' },\r\n    { number: 111, group: 'Ethnic', label: 'Shanai' },\r\n    { number: 112, group: 'Percussive', label: 'Tinkle Bell' },\r\n    { number: 113, group: 'Percussive', label: 'Agogo' },\r\n    { number: 114, group: 'Percussive', label: 'Steel Drums' },\r\n    { number: 115, group: 'Percussive', label: 'Woodblock' },\r\n    { number: 116, group: 'Percussive', label: 'Taiko Drum' },\r\n    { number: 117, group: 'Percussive', label: 'Melodic Tom' },\r\n    { number: 118, group: 'Percussive', label: 'Synth Drum' },\r\n    { number: 119, group: 'Sound Effects', label: 'Reverse Cymbal' },\r\n    { number: 120, group: 'Sound Effects', label: 'Guitar Fret Noise' },\r\n    { number: 121, group: 'Sound Effects', label: 'Breath Noise' },\r\n    { number: 122, group: 'Sound Effects', label: 'Seashore' },\r\n    { number: 123, group: 'Sound Effects', label: 'Bird Tweet' },\r\n    { number: 124, group: 'Sound Effects', label: 'Telephone Ring' },\r\n    { number: 125, group: 'Sound Effects', label: 'Helicopter' },\r\n    { number: 126, group: 'Sound Effects', label: 'Applause' },\r\n    { number: 127, group: 'Sound Effects', label: 'Gunshot' },\r\n];\r\n\r\nconst MIDI_INSTRUMENTS_Lev2 = [\r\n    { number: 1, subnumber: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\r\n    { number: 1, subnumber: 1, group: 'Piano', label: 'Wide Acoustic Grand' },\r\n    { number: 1, subnumber: 2, group: 'Piano', label: 'Dark Acoustic Grand' },\r\n    { number: 2, subnumber: 0, group: 'Piano', label: 'Bright Acoustic Piano' },\r\n    { number: 2, subnumber: 1, group: 'Piano', label: 'Wide Bright Acoustic' },\r\n    { number: 3, subnumber: 0, group: 'Piano', label: 'Electric Grand Piano' },\r\n    { number: 3, subnumber: 1, group: 'Piano', label: 'Wide Electric Grand' },\r\n    { number: 4, subnumber: 0, group: 'Piano', label: 'Honky-tonk Piano' },\r\n    { number: 4, subnumber: 1, group: 'Piano', label: 'Wide Honky-tonk' },\r\n    { number: 5, subnumber: 0, group: 'Piano', label: 'Rhodes Piano' },\r\n    { number: 5, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 1' },\r\n    { number: 5, subnumber: 2, group: 'Piano', label: 'Electric Piano 1 Variation' },\r\n    { number: 5, subnumber: 3, group: 'Piano', label: '60\\'s Electric Piano' },\r\n    { number: 6, subnumber: 0, group: 'Piano', label: 'Chorused Electric Piano' },\r\n    { number: 6, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 2' },\r\n    { number: 6, subnumber: 2, group: 'Piano', label: 'Electric Piano 2 Variation' },\r\n    { number: 6, subnumber: 3, group: 'Piano', label: 'Electric Piano Legend' },\r\n    { number: 6, subnumber: 4, group: 'Piano', label: 'Electric Piano Phase' },\r\n    { number: 7, subnumber: 0, group: 'Piano', label: 'Harpsichord' },\r\n    { number: 7, subnumber: 1, group: 'Piano', label: 'Coupled Harpsichord' },\r\n    { number: 7, subnumber: 2, group: 'Piano', label: 'Wide Harpsichord' },\r\n    { number: 7, subnumber: 3, group: 'Piano', label: 'Open Harpsichord' },\r\n    { number: 8, subnumber: 0, group: 'Piano', label: 'Clavinet' },\r\n    { number: 8, subnumber: 1, group: 'Piano', label: 'Pulse Clavinet' },\r\n    { number: 9, subnumber: 0, group: 'Chromatic Percussion', label: 'Celesta' },\r\n    { number: 10, subnumber: 0, group: 'Chromatic Percussion', label: 'Glockenspiel' },\r\n    { number: 11, subnumber: 0, group: 'Chromatic Percussion', label: 'Music Box' },\r\n    { number: 12, subnumber: 0, group: 'Chromatic Percussion', label: 'Vibraphone' },\r\n    { number: 12, subnumber: 1, group: 'Chromatic Percussion', label: 'Wet Vibraphone' },\r\n    { number: 13, subnumber: 0, group: 'Chromatic Percussion', label: 'Marimba' },\r\n    { number: 13, subnumber: 1, group: 'Chromatic Percussion', label: 'Wide Marimba' },\r\n    { number: 14, subnumber: 0, group: 'Chromatic Percussion', label: 'Xylophone' },\r\n    { number: 15, subnumber: 0, group: 'Chromatic Percussion', label: 'Tubular Bells' },\r\n    { number: 15, subnumber: 1, group: 'Chromatic Percussion', label: 'Church Bells' },\r\n    { number: 15, subnumber: 2, group: 'Chromatic Percussion', label: 'Carillon' },\r\n    { number: 16, subnumber: 0, group: 'Chromatic Percussion', label: 'Dulcimer / Santur' },\r\n    { number: 17, subnumber: 0, group: 'Organ', label: 'Hammond Organ' },\r\n    { number: 17, subnumber: 1, group: 'Organ', label: 'Detuned Organ 1' },\r\n    { number: 17, subnumber: 2, group: 'Organ', label: '60\\'s Organ 1' },\r\n    { number: 17, subnumber: 3, group: 'Organ', label: 'Organ 4' },\r\n    { number: 18, subnumber: 0, group: 'Organ', label: 'Percussive Organ' },\r\n    { number: 18, subnumber: 1, group: 'Organ', label: 'Detuned Organ 2' },\r\n    { number: 18, subnumber: 2, group: 'Organ', label: 'Organ 5' },\r\n    { number: 19, subnumber: 0, group: 'Organ', label: 'Rock Organ' },\r\n    { number: 20, subnumber: 0, group: 'Organ', label: 'Church Organ 1' },\r\n    { number: 20, subnumber: 1, group: 'Organ', label: 'Church Organ 2' },\r\n    { number: 20, subnumber: 2, group: 'Organ', label: 'Church Organ 3' },\r\n    { number: 21, subnumber: 0, group: 'Organ', label: 'Reed Organ' },\r\n    { number: 21, subnumber: 1, group: 'Organ', label: 'Puff Organ' },\r\n    { number: 22, subnumber: 0, group: 'Organ', label: 'French Accordion' },\r\n    { number: 22, subnumber: 1, group: 'Organ', label: 'Italian Accordion' },\r\n    { number: 23, subnumber: 0, group: 'Organ', label: 'Harmonica' },\r\n    { number: 24, subnumber: 0, group: 'Organ', label: 'Bandoneon' },\r\n    { number: 25, subnumber: 0, group: 'Guitar', label: 'Nylon-String Guitar' },\r\n    { number: 25, subnumber: 1, group: 'Guitar', label: 'Ukelele' },\r\n    { number: 25, subnumber: 2, group: 'Guitar', label: 'Open Nylon Guitar' },\r\n    { number: 25, subnumber: 3, group: 'Guitar', label: 'Nylon Guitar 2' },\r\n    { number: 26, subnumber: 0, group: 'Guitar', label: 'Steel-String Guitar' },\r\n    { number: 26, subnumber: 1, group: 'Guitar', label: '12-String Guitar' },\r\n    { number: 26, subnumber: 2, group: 'Guitar', label: 'Mandolin' },\r\n    { number: 26, subnumber: 3, group: 'Guitar', label: 'Steel + Body' },\r\n    { number: 27, subnumber: 0, group: 'Guitar', label: 'Jazz Guitar' },\r\n    { number: 27, subnumber: 1, group: 'Guitar', label: 'Hawaiian Guitar' },\r\n    { number: 28, subnumber: 0, group: 'Guitar', label: 'Clean Electric Guitar' },\r\n    { number: 28, subnumber: 1, group: 'Guitar', label: 'Chorus Guitar' },\r\n    { number: 28, subnumber: 2, group: 'Guitar', label: 'Mid Tone Guitar' },\r\n    { number: 29, subnumber: 0, group: 'Guitar', label: 'Muted Electric Guitar' },\r\n    { number: 29, subnumber: 1, group: 'Guitar', label: 'Funk Guitar' },\r\n    { number: 29, subnumber: 2, group: 'Guitar', label: 'Funk Guitar 2' },\r\n    { number: 29, subnumber: 3, group: 'Guitar', label: 'Jazz Man' },\r\n    { number: 30, subnumber: 0, group: 'Guitar', label: 'Overdriven Guitar' },\r\n    { number: 30, subnumber: 1, group: 'Guitar', label: 'Guitar Pinch' },\r\n    { number: 31, subnumber: 0, group: 'Guitar', label: 'Distortion Guitar' },\r\n    { number: 31, subnumber: 1, group: 'Guitar', label: 'Feedback Guitar' },\r\n    { number: 31, subnumber: 2, group: 'Guitar', label: 'Distortion Rtm Guitar' },\r\n    { number: 32, subnumber: 0, group: 'Guitar', label: 'Guitar Harmonics' },\r\n    { number: 32, subnumber: 1, group: 'Guitar', label: 'Guitar Feedback' },\r\n    { number: 33, subnumber: 0, group: 'Bass', label: 'Acoustic Bass' },\r\n    { number: 34, subnumber: 0, group: 'Bass', label: 'Fingered Bass' },\r\n    { number: 34, subnumber: 1, group: 'Bass', label: 'Finger Slap' },\r\n    { number: 35, subnumber: 0, group: 'Bass', label: 'Picked Bass' },\r\n    { number: 36, subnumber: 0, group: 'Bass', label: 'Fretless Bass' },\r\n    { number: 37, subnumber: 0, group: 'Bass', label: 'Slap Bass 1' },\r\n    { number: 38, subnumber: 0, group: 'Bass', label: 'Slap Bass 2' },\r\n    { number: 39, subnumber: 0, group: 'Bass', label: 'Synth Bass 1' },\r\n    { number: 39, subnumber: 1, group: 'Bass', label: 'Synth Bass 101' },\r\n    { number: 39, subnumber: 2, group: 'Bass', label: 'Synth Bass 3' },\r\n    { number: 39, subnumber: 3, group: 'Bass', label: 'Clavi Bass' },\r\n    { number: 39, subnumber: 4, group: 'Bass', label: 'Hammer' },\r\n    { number: 40, subnumber: 0, group: 'Bass', label: 'Synth Bass 2' },\r\n    { number: 40, subnumber: 1, group: 'Bass', label: 'Synth Bass 4' },\r\n    { number: 40, subnumber: 2, group: 'Bass', label: 'Rubber Bass' },\r\n    { number: 40, subnumber: 3, group: 'Bass', label: 'Attack Pulse' },\r\n    { number: 41, subnumber: 0, group: 'Strings', label: 'Violin' },\r\n    { number: 41, subnumber: 1, group: 'Strings', label: 'Slow Violin' },\r\n    { number: 42, subnumber: 0, group: 'Strings', label: 'Viola' },\r\n    { number: 43, subnumber: 0, group: 'Strings', label: 'Cello' },\r\n    { number: 44, subnumber: 0, group: 'Strings', label: 'Contrabass' },\r\n    { number: 45, subnumber: 0, group: 'Strings', label: 'Tremolo Strings' },\r\n    { number: 46, subnumber: 0, group: 'Strings', label: 'Pizzicato Strings' },\r\n    { number: 47, subnumber: 0, group: 'Strings', label: 'Harp' },\r\n    { number: 47, subnumber: 1, group: 'Strings', label: 'Yang Qin' },\r\n    { number: 48, subnumber: 0, group: 'Strings', label: 'Timpani' },\r\n    { number: 49, subnumber: 0, group: 'Orchestral Ensemble', label: 'String Ensemble' },\r\n    { number: 49, subnumber: 1, group: 'Orchestral Ensemble', label: 'Orchestra Strings' },\r\n    { number: 49, subnumber: 2, group: 'Orchestral Ensemble', label: '60\\'s Strings' },\r\n    { number: 50, subnumber: 0, group: 'Orchestral Ensemble', label: 'Slow String Ensemble' },\r\n    { number: 51, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 1' },\r\n    { number: 51, subnumber: 1, group: 'Orchestral Ensemble', label: 'Synth Strings 3' },\r\n    { number: 52, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 2' },\r\n    { number: 53, subnumber: 0, group: 'Orchestral Ensemble', label: 'Choir Aahs' },\r\n    { number: 53, subnumber: 1, group: 'Orchestral Ensemble', label: 'Choir Aahs 2' },\r\n    { number: 54, subnumber: 0, group: 'Orchestral Ensemble', label: 'Voice Oohs' },\r\n    { number: 54, subnumber: 1, group: 'Orchestral Ensemble', label: 'Humming' },\r\n    { number: 55, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Voice' },\r\n    { number: 55, subnumber: 1, group: 'Orchestral Ensemble', label: 'Analog Voice' },\r\n    { number: 56, subnumber: 0, group: 'Orchestral Ensemble', label: 'Orchestra Hit' },\r\n    { number: 56, subnumber: 1, group: 'Orchestral Ensemble', label: 'Bass Hit' },\r\n    { number: 56, subnumber: 2, group: 'Orchestral Ensemble', label: '6th Hit' },\r\n    { number: 56, subnumber: 3, group: 'Orchestral Ensemble', label: 'Euro Hit' },\r\n    { number: 57, subnumber: 0, group: 'Brass', label: 'Trumpet' },\r\n    { number: 57, subnumber: 1, group: 'Brass', label: 'Dark Trumpet' },\r\n    { number: 58, subnumber: 0, group: 'Brass', label: 'Trombone' },\r\n    { number: 58, subnumber: 1, group: 'Brass', label: 'Trombone 2' },\r\n    { number: 58, subnumber: 2, group: 'Brass', label: 'Bright Trombone' },\r\n    { number: 59, subnumber: 0, group: 'Brass', label: 'Tuba' },\r\n    { number: 60, subnumber: 0, group: 'Brass', label: 'Muted Trumpet' },\r\n    { number: 60, subnumber: 1, group: 'Brass', label: 'Muted Trumpet 2' },\r\n    { number: 61, subnumber: 0, group: 'Brass', label: 'French Horn' },\r\n    { number: 61, subnumber: 1, group: 'Brass', label: 'French Horn 2' },\r\n    { number: 62, subnumber: 0, group: 'Brass', label: 'Brass Section' },\r\n    { number: 62, subnumber: 1, group: 'Brass', label: 'Brass Section' },\r\n    { number: 63, subnumber: 0, group: 'Brass', label: 'Synth Brass 1' },\r\n    { number: 63, subnumber: 1, group: 'Brass', label: 'Synth Brass 3' },\r\n    { number: 63, subnumber: 2, group: 'Brass', label: 'Analog Brass 1' },\r\n    { number: 63, subnumber: 3, group: 'Brass', label: 'Jump Brass' },\r\n    { number: 64, subnumber: 0, group: 'Brass', label: 'Synth Brass 2' },\r\n    { number: 64, subnumber: 1, group: 'Brass', label: 'Synth Brass 4' },\r\n    { number: 64, subnumber: 2, group: 'Brass', label: 'Analog Brass 2' },\r\n    { number: 65, subnumber: 0, group: 'Reed', label: 'Soprano Sax' },\r\n    { number: 66, subnumber: 0, group: 'Reed', label: 'Alto Sax' },\r\n    { number: 67, subnumber: 0, group: 'Reed', label: 'Tenor Sax' },\r\n    { number: 68, subnumber: 0, group: 'Reed', label: 'Baritone Sax' },\r\n    { number: 69, subnumber: 0, group: 'Reed', label: 'Oboe' },\r\n    { number: 70, subnumber: 0, group: 'Reed', label: 'English Horn' },\r\n    { number: 71, subnumber: 0, group: 'Reed', label: 'Bassoon' },\r\n    { number: 72, subnumber: 0, group: 'Reed', label: 'Clarinet' },\r\n    { number: 73, subnumber: 0, group: 'Wind', label: 'Piccolo' },\r\n    { number: 74, subnumber: 0, group: 'Wind', label: 'Flute' },\r\n    { number: 75, subnumber: 0, group: 'Wind', label: 'Recorder' },\r\n    { number: 76, subnumber: 0, group: 'Wind', label: 'Pan Flute' },\r\n    { number: 77, subnumber: 0, group: 'Wind', label: 'Blown Bottle' },\r\n    { number: 78, subnumber: 0, group: 'Wind', label: 'Shakuhachi' },\r\n    { number: 79, subnumber: 0, group: 'Wind', label: 'Whistle' },\r\n    { number: 80, subnumber: 0, group: 'Wind', label: 'Ocarina' },\r\n    { number: 81, subnumber: 0, group: 'Lead', label: 'Square Lead' },\r\n    { number: 81, subnumber: 1, group: 'Lead', label: 'Square Wave' },\r\n    { number: 81, subnumber: 2, group: 'Lead', label: 'Sine Wave' },\r\n    { number: 82, subnumber: 0, group: 'Lead', label: 'Saw Lead' },\r\n    { number: 82, subnumber: 1, group: 'Lead', label: 'Saw Wave' },\r\n    { number: 82, subnumber: 2, group: 'Lead', label: 'Doctor Solo' },\r\n    { number: 82, subnumber: 3, group: 'Lead', label: 'Natural Lead' },\r\n    { number: 82, subnumber: 4, group: 'Lead', label: 'Sequenced Saw' },\r\n    { number: 83, subnumber: 0, group: 'Lead', label: 'Synth Calliope' },\r\n    { number: 84, subnumber: 0, group: 'Lead', label: 'Chiffer Lead' },\r\n    { number: 85, subnumber: 0, group: 'Lead', label: 'Charang' },\r\n    { number: 85, subnumber: 1, group: 'Lead', label: 'Wire Lead' },\r\n    { number: 86, subnumber: 0, group: 'Lead', label: 'Solo Synth Vox' },\r\n    { number: 87, subnumber: 0, group: 'Lead', label: '5th Saw Wave' },\r\n    { number: 88, subnumber: 0, group: 'Lead', label: 'Bass & Lead' },\r\n    { number: 88, subnumber: 1, group: 'Lead', label: 'Delayed Lead' },\r\n    { number: 89, subnumber: 0, group: 'Synth Pad', label: 'Fantasia Pad' },\r\n    { number: 90, subnumber: 0, group: 'Synth Pad', label: 'Warm Pad' },\r\n    { number: 90, subnumber: 1, group: 'Synth Pad', label: 'Sine Pad' },\r\n    { number: 91, subnumber: 0, group: 'Synth Pad', label: 'Polysynth Pad' },\r\n    { number: 92, subnumber: 0, group: 'Synth Pad', label: 'Space Voice Pad' },\r\n    { number: 92, subnumber: 1, group: 'Synth Pad', label: 'Itopia' },\r\n    { number: 93, subnumber: 0, group: 'Synth Pad', label: 'Bowed Glass Pad' },\r\n    { number: 94, subnumber: 0, group: 'Synth Pad', label: 'Metal Pad' },\r\n    { number: 95, subnumber: 0, group: 'Synth Pad', label: 'Halo Pad' },\r\n    { number: 96, subnumber: 0, group: 'Synth Pad', label: 'Sweep Pad' },\r\n    { number: 97, subnumber: 0, group: 'Synth Effects', label: 'Ice Rain' },\r\n    { number: 98, subnumber: 0, group: 'Synth Effects', label: 'Soundtrack' },\r\n    { number: 99, subnumber: 0, group: 'Synth Effects', label: 'Crystal' },\r\n    { number: 99, subnumber: 1, group: 'Synth Effects', label: 'Synth Mallet' },\r\n    { number: 100, subnumber: 0, group: 'Synth Effects', label: 'Atmosphere' },\r\n    { number: 101, subnumber: 0, group: 'Synth Effects', label: 'Brightness' },\r\n    { number: 102, subnumber: 0, group: 'Synth Effects', label: 'Goblin' },\r\n    { number: 103, subnumber: 0, group: 'Synth Effects', label: 'Echo Drops' },\r\n    { number: 103, subnumber: 1, group: 'Synth Effects', label: 'Echo Bell' },\r\n    { number: 103, subnumber: 2, group: 'Synth Effects', label: 'Echo Pan' },\r\n    { number: 104, subnumber: 0, group: 'Synth Effects', label: 'Star Theme' },\r\n    { number: 105, subnumber: 0, group: 'Ethnic', label: 'Sitar' },\r\n    { number: 105, subnumber: 1, group: 'Ethnic', label: 'Sitar 2' },\r\n    { number: 106, subnumber: 0, group: 'Ethnic', label: 'Banjo' },\r\n    { number: 107, subnumber: 0, group: 'Ethnic', label: 'Shamisen' },\r\n    { number: 108, subnumber: 0, group: 'Ethnic', label: 'Koto' },\r\n    { number: 108, subnumber: 1, group: 'Ethnic', label: 'Taisho Koto' },\r\n    { number: 109, subnumber: 0, group: 'Ethnic', label: 'Kalimba' },\r\n    { number: 110, subnumber: 0, group: 'Ethnic', label: 'Bagpipe' },\r\n    { number: 111, subnumber: 0, group: 'Ethnic', label: 'Fiddle' },\r\n    { number: 112, subnumber: 0, group: 'Ethnic', label: 'Shanai' },\r\n    { number: 113, subnumber: 0, group: 'Percussive', label: 'Tinkle Bell' },\r\n    { number: 114, subnumber: 0, group: 'Percussive', label: 'Agogo' },\r\n    { number: 115, subnumber: 0, group: 'Percussive', label: 'Steel Drums' },\r\n    { number: 116, subnumber: 0, group: 'Percussive', label: 'Woodblock' },\r\n    { number: 116, subnumber: 1, group: 'Percussive', label: 'Castanets' },\r\n    { number: 117, subnumber: 0, group: 'Percussive', label: 'Taiko Drum' },\r\n    { number: 117, subnumber: 1, group: 'Percussive', label: 'Concert Bass Drum' },\r\n    { number: 118, subnumber: 0, group: 'Percussive', label: 'Melodic Tom 1' },\r\n    { number: 118, subnumber: 1, group: 'Percussive', label: 'Melodic Tom 2' },\r\n    { number: 119, subnumber: 0, group: 'Percussive', label: 'Synth Drum' },\r\n    { number: 119, subnumber: 1, group: 'Percussive', label: '808 Tom' },\r\n    { number: 119, subnumber: 2, group: 'Percussive', label: 'Electric Percussion' },\r\n    { number: 120, subnumber: 0, group: 'Percussive', label: 'Reverse Cymbal' },\r\n    { number: 121, subnumber: 0, group: 'Sound Effects', label: 'Guitar Fret Noise' },\r\n    { number: 121, subnumber: 1, group: 'Sound Effects', label: 'Guitar Cut Noise' },\r\n    { number: 121, subnumber: 2, group: 'Sound Effects', label: 'String Slap' },\r\n    { number: 122, subnumber: 0, group: 'Sound Effects', label: 'Breath Noise' },\r\n    { number: 122, subnumber: 1, group: 'Sound Effects', label: 'Flute Key Click' },\r\n    { number: 123, subnumber: 0, group: 'Sound Effects', label: 'Seashore' },\r\n    { number: 123, subnumber: 1, group: 'Sound Effects', label: 'Rain' },\r\n    { number: 123, subnumber: 2, group: 'Sound Effects', label: 'Thunder' },\r\n    { number: 123, subnumber: 3, group: 'Sound Effects', label: 'Wind' },\r\n    { number: 123, subnumber: 4, group: 'Sound Effects', label: 'Stream' },\r\n    { number: 123, subnumber: 5, group: 'Sound Effects', label: 'Bubble' },\r\n    { number: 124, subnumber: 0, group: 'Sound Effects', label: 'Bird Tweet' },\r\n    { number: 124, subnumber: 1, group: 'Sound Effects', label: 'Dog' },\r\n    { number: 124, subnumber: 2, group: 'Sound Effects', label: 'Horse Gallop' },\r\n    { number: 124, subnumber: 3, group: 'Sound Effects', label: 'Bird 2' },\r\n    { number: 125, subnumber: 0, group: 'Sound Effects', label: 'Telephone 1' },\r\n    { number: 125, subnumber: 1, group: 'Sound Effects', label: 'Telephone 2' },\r\n    { number: 125, subnumber: 2, group: 'Sound Effects', label: 'Door Creaking' },\r\n    { number: 125, subnumber: 3, group: 'Sound Effects', label: 'Door Closing' },\r\n    { number: 125, subnumber: 4, group: 'Sound Effects', label: 'Scratch' },\r\n    { number: 125, subnumber: 5, group: 'Sound Effects', label: 'Wind Chimes' },\r\n    { number: 126, subnumber: 0, group: 'Sound Effects', label: 'Helicopter' },\r\n    { number: 126, subnumber: 1, group: 'Sound Effects', label: 'Car Engine' },\r\n    { number: 126, subnumber: 2, group: 'Sound Effects', label: 'Car Stop' },\r\n    { number: 126, subnumber: 3, group: 'Sound Effects', label: 'Car Pass' },\r\n    { number: 126, subnumber: 4, group: 'Sound Effects', label: 'Car Crash' },\r\n    { number: 126, subnumber: 5, group: 'Sound Effects', label: 'Siren' },\r\n    { number: 126, subnumber: 6, group: 'Sound Effects', label: 'Train' },\r\n    { number: 126, subnumber: 7, group: 'Sound Effects', label: 'Jetplane' },\r\n    { number: 126, subnumber: 8, group: 'Sound Effects', label: 'Starship' },\r\n    { number: 126, subnumber: 9, group: 'Sound Effects', label: 'Burst Noise' },\r\n    { number: 127, subnumber: 0, group: 'Sound Effects', label: 'Applause' },\r\n    { number: 127, subnumber: 1, group: 'Sound Effects', label: 'Laughing' },\r\n    { number: 127, subnumber: 2, group: 'Sound Effects', label: 'Screaming' },\r\n    { number: 127, subnumber: 3, group: 'Sound Effects', label: 'Punch' },\r\n    { number: 127, subnumber: 4, group: 'Sound Effects', label: 'Heart Beat' },\r\n    { number: 127, subnumber: 5, group: 'Sound Effects', label: 'Footsteps' },\r\n    { number: 128, subnumber: 0, group: 'Sound Effects', label: 'Gun Shot' },\r\n    { number: 128, subnumber: 1, group: 'Sound Effects', label: 'Machine Gun' },\r\n    { number: 128, subnumber: 2, group: 'Sound Effects', label: 'Lasergun' },\r\n    { number: 128, subnumber: 3, group: 'Sound Effects', label: 'Explosion' }\r\n];\r\n\r\nconst GENERAL_MIDI_DRUM_NOTE_NUMBERS = new Map([\r\n    [27, 'High Q(GM2)'],\r\n    [28, 'Slap(GM2)'],\r\n    [29, 'Scratch Push(GM2)'],\r\n    [30, 'Scratch Pull(GM2)'],\r\n    [31, 'Sticks(GM2)'],\r\n    [32, 'Square Click(GM2)'],\r\n    [33, 'Metronome Click(GM2)'],\r\n    [34, 'Metronome Bell(GM2)'],\r\n    [35, 'Bass Drum 2'],\r\n    [36, 'Bass Drum 1'],\r\n    [37, 'Side Stick'],\r\n    [38, 'Snare Drum 1'],\r\n    [39, 'Hand Clap'],\r\n    [40, 'Snare Drum 2'],\r\n    [41, 'Low Tom 2'],\r\n    [42, 'Closed Hi-hat'],\r\n    [43, 'Low Tom 1'],\r\n    [44, 'Pedal Hi-hat'],\r\n    [45, 'Mid Tom 2'],\r\n    [46, 'Open Hi-hat'],\r\n    [47, 'Mid Tom 1'],\r\n    [48, 'High Tom 2'],\r\n    [49, 'Crash Cymbal 1'],\r\n    [50, 'High Tom 1'],\r\n    [51, 'Ride Cymbal 1'],\r\n    [52, 'Chinese Cymbal'],\r\n    [53, 'Ride Bell'],\r\n    [54, 'Tambourine'],\r\n    [55, 'Splash Cymbal'],\r\n    [56, 'Cowbell'],\r\n    [57, 'Crash Cymbal 2'],\r\n    [58, 'Vibra Slap'],\r\n    [59, 'Ride Cymbal 2'],\r\n    [60, 'High Bongo'],\r\n    [61, 'Low Bongo'],\r\n    [62, 'Mute High Conga'],\r\n    [63, 'Open High Conga'],\r\n    [64, 'Low Conga'],\r\n    [65, 'High Timbale'],\r\n    [66, 'Low Timbale'],\r\n    [67, 'High Agogo'],\r\n    [68, 'Low Agogo'],\r\n    [69, 'Cabasa'],\r\n    [70, 'Maracas'],\r\n    [71, 'Short Whistle'],\r\n    [72, 'Long Whistle'],\r\n    [73, 'Short Guiro'],\r\n    [74, 'Long Guiro'],\r\n    [75, 'Claves'],\r\n    [76, 'High Wood Block'],\r\n    [77, 'Low Wood Block'],\r\n    [78, 'Mute Cuica'],\r\n    [79, 'Open Cuica'],\r\n    [80, 'Mute Triangle'],\r\n    [81, 'Open Triangle'],\r\n    [82, 'Shaker(GM2)'],\r\n    [83, 'Jingle Bell(GM2)'],\r\n    [84, 'Belltree(GM2)'],\r\n    [85, 'Castanets(GM2)'],\r\n    [86, 'Mute Surdo(GM2)'],\r\n    [87, 'Open Surdo(GM2)']\r\n]);\r\n\r\n// TODO: This might be useful, e.g. to check which notes Player can play\r\n// const MIDI_NOTE_RANGES = [\r\n//     // Strings\r\n//     { instrNr: 40, nrL2: -1, subNrL2: -1, label: 'Violin', min: 55, max: 103 },\r\n//     { instrNr: 41, nrL2: -1, subNrL2: -1, label: 'Viola', min: 48, max: 91 },\r\n//     { instrNr: 42, nrL2: -1, subNrL2: -1, label: 'Cello', min: 36, max: 76 },\r\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Double Bass', min: 28, max: 67 },\r\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Bass Guitar', min: 28, max: 67 },\r\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Acoustic Guitar', min: 40, max: 88 },\r\n//     // Brass\r\n//     { instrNr: 58, nrL2: 59, subNrL2: 0, label: 'Tuba', min: 28, max: 58 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Trombone', min: 34, max: 67 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'French Horn', min: 34, max: 77 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trombone', min: 40, max: 72 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trumpet', min: 55, max: 82 },\r\n//     // Woodwinds\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Piccolo', min: 74, max: 102 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Flute', min: 60, max: 96 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Oboe', min: 58, max: 91 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Flute', min: 55, max: 91 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Cor Anglais (English Horn)', min: 52, max: 81 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Clarinet', min: 50, max: 94 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Clarinet', min: 38, max: 77 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bassoon', min: 34, max: 75 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Contrabassoon', min: 22, max: 53 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Recorder', min: 72, max: 98 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Recorder', min: 65, max: 91 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Recorder', min: 60, max: 86 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Recorder', min: 53, max: 79 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Baritone Sax', min: 36, max: 69 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Sax', min: 44, max: 76 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Sax', min: 49, max: 81 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Sax', min: 56, max: 88 },\r\n//     // Tuned Percussion\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Glockenspiel', min: 79, max: 108 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Xylophone', min: 65, max: 108 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Vibraphone', min: 53, max: 89 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Marimba', min: 45, max: 96 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Marimba', min: 33, max: 81 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Celeste', min: 60, max: 108 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tubular Bells', min: 60, max: 77 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Timpani', min: 40, max: 55 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harpsichord', min: 29, max: 89 },\r\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harp', min: 24, max: 103 }\r\n// ];\r\n\r\n// Build lookup maps\r\nfor (let note of MIDI_NOTES) {\r\n    MidiNoteByPitch.set(note.pitch, note);\r\n    MidiNoteByLabel.set(note.label, note);\r\n}\r\nfor (let instrument of MIDI_INSTRUMENTS) {\r\n    MidiInstrumentByNumber.set(instrument.number, instrument);\r\n}\r\nfor (let instrument of MIDI_INSTRUMENTS_Lev2) {\r\n    const key = `${instrument.number}-${instrument.subnumber}`;\r\n    MidiInstrumentByNumberLev2.set(key, instrument);\r\n}\r\n","/**\n * Map:keyCount->pitchRange\n * pitchRange is {minPitch:number, maxPitch:number}\n */\nexport const pianoPitchRange = new Map([\n    [72, { minPitch: 24, maxPitch: 95 }],\n    [88, { minPitch: 21, maxPitch: 108 }],\n    [128, { minPitch: 0, maxPitch: 127 }],\n]);\n\n/**\n *\n * @param {Note[]} notes notes with only MIDI information\n * @returns {?} notes with fingering information\n */\nexport function fingeringFromMidi(notes) {\n    // TODO: detect chords first?\n    // TODO: then lookup chords' fingerings from a lookup table\n\n    // TODO: alternatively (as fallback) use heuristics\n\n    // TODO: or try to do it like humans do when playing\n\n\n\n}\n","import React from 'react';\r\nimport { range } from 'd3-array';\r\nimport View from '../lib/ui/View';\r\nimport { getMidiNoteByNr, isSharp } from '../lib/Midi';\r\nimport { pianoPitchRange } from '../lib/instruments/Piano';\r\n\r\nexport default class PianoKeyboard extends View {\r\n\r\n    constructor(props) {\r\n        const margin = { top: 20, right: 20, bottom: 40, left: 20 };\r\n        super(props, margin, 1, 1, false, false);\r\n    }\r\n\r\n    componentDidUpdate = () => this.resizeComponent();\r\n\r\n    render() {\r\n        const { rowSpan, columnSpan, viewWidth, viewHeight, width, height, margin } = this.state;\r\n        const { currentNotes } = this.props;\r\n        const { minPitch, maxPitch } = pianoPitchRange.get(88);\r\n        const whiteNotes = range(minPitch, maxPitch + 1).filter(d => !isSharp(d));\r\n        // Keys\r\n        const keyWidth = width / whiteNotes.length;\r\n        const blackKeyWidth = keyWidth * 0.9;\r\n        const whiteKeys = [];\r\n        const blackKeys = [];\r\n        const labels = [];\r\n        const octaveMarkerPositions = [];\r\n        let currentX = 0;\r\n        for (let octave = -1; octave < 11; octave++) {\r\n            for (let key = 0; key < 12; key++) {\r\n                const pitch = octave * 12 + key;\r\n                if (pitch < minPitch || pitch > maxPitch) {\r\n                    continue;\r\n                }\r\n                const black = isSharp(pitch);\r\n                const note = getMidiNoteByNr(pitch);\r\n                // Position and size\r\n                const x = black ? currentX - (0.5 * blackKeyWidth) : currentX;\r\n                let y = black ? 0 : height * 0.02;\r\n                const w = black ? blackKeyWidth : keyWidth;\r\n                const h = black ? height * 0.6 : height * 0.98;\r\n                if (pitch % 12 === 0) {\r\n                    octaveMarkerPositions.push({ octave, x });\r\n                }\r\n                // Colors\r\n                let color = '#f8f8f8';\r\n                let textColor = '#111';\r\n                let borderRadius = 5;\r\n                if (currentNotes.has(pitch)) {\r\n                    color = 'steelblue';\r\n                } else {\r\n                    color = black ? '#222' : '#f8f8f8';\r\n                    textColor = black ? '#eee' : '#222';\r\n                }\r\n                const newKey = (\r\n                    <rect\r\n                        key={pitch}\r\n                        width={w}\r\n                        height={h}\r\n                        x={x}\r\n                        y={y}\r\n                        rx={borderRadius}\r\n                        ry={borderRadius}\r\n                        fill={color}\r\n                        stroke='#888'\r\n                        strokeWidth='0.5'\r\n                    >\r\n                        <title>\r\n                            {note.label} (MIDI {pitch})\r\n                        </title>\r\n                    </rect>\r\n                );\r\n                labels.push((\r\n                    <text\r\n                        key={pitch}\r\n                        fontSize='10px'\r\n                        style={{\r\n                            fill: textColor,\r\n                            textAnchor: 'middle',\r\n                            alignmentBaseline: 'baseline',\r\n                            writingMode: 'vertical-lr',\r\n                            textOrientation: 'upright'\r\n                        }}\r\n                        x={x + 0.5 * w}\r\n                        y={black ? h - 18 : h - 10}\r\n                    >\r\n                        {note.name}\r\n                    </text>\r\n                ));\r\n                if (black) {\r\n                    blackKeys.push(newKey);\r\n                } else {\r\n                    whiteKeys.push(newKey);\r\n                    currentX += keyWidth;\r\n                }\r\n            }\r\n        }\r\n        // Octave indicators\r\n        const octaveMarkers = [];\r\n        const octaveMarkerLabels = [];\r\n        const yPos = height + 15;\r\n        for (let i = 0; i < octaveMarkerPositions.length - 1; i++) {\r\n            const left = octaveMarkerPositions[i].x + 2;\r\n            const right = octaveMarkerPositions[i + 1].x - 2;\r\n            const d = `\r\n                M ${left} ${yPos - 10}\r\n                L ${left} ${yPos}\r\n                L ${right} ${yPos}\r\n                L ${right} ${yPos - 10}\r\n            `;\r\n            octaveMarkers.push((\r\n                <path\r\n                    key={d}\r\n                    fill='none'\r\n                    stroke='#888'\r\n                    d={d}\r\n                />\r\n            ));\r\n            octaveMarkerLabels.push((\r\n                <text\r\n                    key={d}\r\n                    textAnchor='middle'\r\n                    x={(left + right) / 2}\r\n                    y={yPos + 12}\r\n                >\r\n                    Octave {octaveMarkerPositions[i].octave - 1}\r\n                </text>\r\n            ));\r\n        }\r\n        // HTML\r\n        return (\r\n            <div\r\n                className='View PianoKeyboard'\r\n                style={{ gridArea: `span ${rowSpan} / span ${columnSpan}` }}\r\n            >\r\n                <svg\r\n                    width={viewWidth}\r\n                    height={viewHeight}\r\n                >\r\n                    <g\r\n                        ref={n => this.svg = n}\r\n                        transform={`translate(${margin.left}, ${margin.top})`}\r\n                    >\r\n                        {whiteKeys}\r\n                        {blackKeys}\r\n                        {labels}\r\n                        {octaveMarkers}\r\n                        {octaveMarkerLabels}\r\n                    </g>\r\n                </svg>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n","import { getMidiNoteByNr } from \"../lib/Midi\";\r\n\r\n/**\r\n * Note class that reflects MIDI properties but has\r\n * absolute start and end times in seconds.\r\n */\r\nexport default class Note {\r\n    /**\r\n     * Creates a new Note\r\n     * @param {number} pitch pitch\r\n     * @param {number} start start time in seconds\r\n     * @param {number} velocity velocity\r\n     * @param {number} channel MIDI channel\r\n     * @param {number} end end time in seconds\r\n     */\r\n    constructor(\r\n        pitch,\r\n        start = 0,\r\n        velocity = 127,\r\n        channel = 0,\r\n        end = null\r\n    ) {\r\n        this.pitch = pitch;\r\n        this.start = start;\r\n        this.velocity = velocity;\r\n        this.channel = channel;\r\n        this.end = end;\r\n    }\r\n\r\n    /**\r\n     * Creates a Note object from an object via destructuring\r\n     * @param {Object} object object with at least {pitch}\r\n     * @returns {Note} new note\r\n     */\r\n    static from(object) {\r\n        const {\r\n            pitch,\r\n            start = 0,\r\n            velocity = 127,\r\n            channel = 0,\r\n            end = null\r\n        } = object;\r\n        if (pitch === undefined) {\r\n            console.error('Cannot create Note with undefined pitch');\r\n            return null;\r\n        }\r\n        return new Note(pitch, start, velocity, channel, end);\r\n    }\r\n\r\n    /**\r\n     * Returns a copy of the Note object\r\n     * @returns {Note} new note\r\n     */\r\n    clone() {\r\n        return new Note(\r\n            this.pitch,\r\n            this.start,\r\n            this.velocity,\r\n            this.channel,\r\n            this.end\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the duration of this note in seconds\r\n     * @returns {number} note duration\r\n     */\r\n    getDuration() {\r\n        if (this.end === null) {\r\n            return 0;\r\n        }\r\n        return this.end - this.start;\r\n    }\r\n\r\n    /**\r\n     * Returns the note's name and octave, e.g. 'C#3'\r\n     * @returns {string} note name as string\r\n     */\r\n    getName() {\r\n        return getMidiNoteByNr(this.pitch).label;\r\n    }\r\n\r\n    /**\r\n     * Returns the note's name WITHOUT the octave, e.g. 'C#'\r\n     * @returns {string} note name as string\r\n     */\r\n    getLetter() {\r\n        return getMidiNoteByNr(this.pitch).name;\r\n    }\r\n\r\n    /**\r\n     * Returns the note's octave.\r\n     * @returns {number} the note's octave\r\n     */\r\n    getOctave() {\r\n        return getMidiNoteByNr(this.pitch).octave;\r\n    }\r\n\r\n    /**\r\n     * Returns a new Note where start and end are multiplied by factor\r\n     * @param {number} addedSeconds seconds to be added to start and end\r\n     * @returns {Note} new note\r\n     */\r\n    shiftTime(addedSeconds) {\r\n        const n = this.clone();\r\n        n.start += addedSeconds;\r\n        n.end = n.end === null ? null : n.end + addedSeconds;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * Returns a new Note where start and end are multiplied by factor\r\n     * @param {number} factor factor to scale start and end with\r\n     * @returns {Note} new note\r\n     */\r\n    scaleTime(factor) {\r\n        const n = this.clone();\r\n        n.start *= factor;\r\n        n.end = n.end === null ? null : n.end * factor;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this note and otherNote have equal attributes.\r\n     * @param {Note} otherNote another Note\r\n     * @returns {boolen} true if equal\r\n     */\r\n    equals(otherNote) {\r\n        if (!otherNote instanceof Note) {\r\n            return false;\r\n        }\r\n        return (\r\n            this.pitch === otherNote.pitch &&\r\n            this.start === otherNote.start &&\r\n            this.velocity === otherNote.velocity &&\r\n            this.channel === otherNote.channel &&\r\n            this.end === otherNote.end\r\n        );\r\n    }\r\n}\r\n","import Note from '../types/Note';\r\n\r\n/**\r\n * Handles incoming MIDI messages from a MIDI device.\r\n */\r\nexport default class MidiInputManager {\r\n\r\n    #getMidiLiveData;\r\n    #setMidiLiveData;\r\n    #addCurrentNote;\r\n    #removeCurrentNote;\r\n\r\n    /**\r\n     * Constructor with callback functions\r\n     * @param {Function} getMidiLiveData a function called by this object to get\r\n     *      the currently recorded MIDI notes from App.js, where the\r\n     *      MidiInputManager instance should be created\r\n     *      Example for how to defined getMidiLiveData as method in App.js:\r\n     *          getMidiLiveData = () => this.state.midiLiveData;\r\n     * @param {Function} setMidiLiveData a function called by this object to\r\n     *      update the currently MIDI notes in App.js\r\n     *      Example:\r\n     *          setMidiLiveData = (data) => {\r\n     *              // Work-around so note_off event handling can\r\n     *              // immediately find the note_on event\r\n     *              this.state.midiLiveData = data;\r\n     *              this.setState({ midiLiveData: data });\r\n     *          };\r\n     * @param {Function} addCurrentNote a function called by this object to add\r\n     *      a currently played note (e.g. currently pressed piano key)\r\n     *      Example:\r\n     *          addCurrentNote = (note) => {\r\n     *              const newMap = new Map(this.state.currentNotes).set(note.pitch, note);\r\n     *              this.setState({ currentNotes: newMap });\r\n     *          }\r\n     * @param {Function} removeCurrentNote a function called by this object to\r\n     *      remove a currently played note\r\n     *      Example:\r\n     *          removeCurrentNote = (pitch) => {\r\n     *              const newMap = new Map(this.state.currentNotes).delete(pitch);\r\n     *              this.setState({ currentNotes: newMap });\r\n     *          }\r\n     */\r\n    constructor(\r\n        getMidiLiveData,\r\n        setMidiLiveData,\r\n        addCurrentNote = () => { },\r\n        removeCurrentNote = () => { }\r\n    ) {\r\n        this.#getMidiLiveData = getMidiLiveData;\r\n        this.#setMidiLiveData = setMidiLiveData;\r\n        this.#addCurrentNote = addCurrentNote;\r\n        this.#removeCurrentNote = removeCurrentNote;\r\n        // Request MIDI access\r\n        if (navigator.requestMIDIAccess) {\r\n            navigator.requestMIDIAccess().then(this._onMIDISuccess, this._onMIDIFailure);\r\n        } else {\r\n            console.error('[MidiInput] WebMIDI is not supported in this browser.');\r\n            alert('You browser does not support WebMIDI');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a successful MIDI access request\r\n     * @param {*} midiAccess MIDI access\r\n     */\r\n    _onMIDISuccess = (midiAccess) => {\r\n        // console.log(midiAccess);\r\n        console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} input devices`);\r\n        for (let input of midiAccess.inputs.values()) {\r\n            console.log(` - ${input.name}`);\r\n            input.onmidimessage = this._handleMIDIMessage;\r\n        }\r\n        console.groupEnd();\r\n        // console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} output devices`);\r\n        // for (let output of midiAccess.outputs.values()) {\r\n        //     console.log(` - ${output.name}`);\r\n        // }\r\n        // console.groupEnd();\r\n    }\r\n\r\n    /**\r\n     * Handles MIDI access errors\r\n     * @param {*} error\r\n     */\r\n    _onMIDIFailure(error) {\r\n        console.error('[MidiInput] Cannot access MIDI devices.', error);\r\n    }\r\n\r\n    /**\r\n     * Handles incoming MIDI messages\r\n     * @param {*} message MIDI message\r\n     */\r\n    _handleMIDIMessage = (message) => {\r\n        // console.log(message);\r\n        const device = message.target.name;\r\n        const command = message.data[0];\r\n        const channel = command % 16;\r\n        const time = message.timeStamp;\r\n        const pitch = message.data[1];\r\n        // A velocity value might not be included with a noteOff command\r\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\r\n        switch (command) {\r\n            case 128:\r\n                this._noteOff(device, time, pitch, channel);\r\n                break;\r\n            case 144:\r\n                if (velocity > 0) {\r\n                    this._noteOn(device, time, pitch, channel, velocity);\r\n                } else {\r\n                    this._noteOff(device, time, pitch, channel);\r\n                }\r\n                break;\r\n            case 224:\r\n                // TODO: handle pitch wheel?\r\n                break;\r\n            default:\r\n            // TODO: handle other commands?\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles note-on messages\r\n     * @param {string} device device name\r\n     * @param {number} time time stamp of the message\r\n     * @param {number} pitch MIDI pitch in [0, 127]\r\n     * @param {number} channel MIDI channel\r\n     * @param {number} velocity MIDI velocity\r\n     */\r\n    _noteOn(device, time, pitch, channel, velocity) {\r\n        const note = new Note(pitch, time / 1000, velocity, channel);\r\n        // Add current note\r\n        this.#addCurrentNote(note);\r\n        // Update recorded MIDI data\r\n        // TODO: probably better to only update on note-off,\r\n        // Then we need internal cache\r\n        // But this might be good, since only 'unfinished' notes need to be checked on note-off,\r\n        // so we can remove finished notes from the cache\r\n        let midiData = this.#getMidiLiveData();\r\n        midiData = midiData.concat([note]);\r\n        this.#setMidiLiveData(midiData);\r\n    }\r\n\r\n    /**\r\n     * Handles note-off messages by updating the end time of the corresponding\r\n     * note\r\n     * @param {string} device device name\r\n     * @param {number} time time stamp of the message\r\n     * @param {number} pitch MIDI pitch in [0, 127]\r\n     * @param {number} channel MIDI channel\r\n     */\r\n    _noteOff(device, time, pitch, channel) {\r\n        const midiData = this.#getMidiLiveData();\r\n        if (midiData.length === 0) {\r\n            // If we have to wait for the setState to process, try again\r\n            setTimeout(() => this._noteOff(time, pitch), 10);\r\n        }\r\n        // Go back to latest note with the same pitch and channel and add the end time\r\n        let index = midiData.length - 1;\r\n        // TODO: if there are multiple instruments or channels, check also for those\r\n        while (midiData[index].pitch !== pitch || midiData[index].channel !== channel || midiData[index].end !== null) {\r\n            index--;\r\n            if (index < 0) {\r\n                console.warn('[MidiInput] Did not find note-on event for note-off event!');\r\n                break;\r\n            }\r\n        }\r\n        if (index >= 0) {\r\n            // Note successfully found, update data\r\n            midiData[index].end = time / 1000;\r\n        }\r\n        this.#setMidiLiveData(midiData);\r\n        this.#removeCurrentNote(pitch);\r\n    }\r\n}\r\n","import { group } from \"d3-array\";\nimport { arrayShallowEquals } from \"./utils/ArrayUtils\";\nimport { Chord } from \"@tonaljs/tonal\";\n\n/**\n * Detects chords, by simply looking for notes that overlap each other in time.\n * Example:\n *    =======\n *       =========\n *         ========\n * Important: Notes must be sorted by start time for this to work correctly.\n * TODO: not tested or shown to work at all yet\n * TODO: optional minimum overlap ratio\n * TODO: new definition of chord? i.e. notes have to start 'together'\n * @param {Note[]} notes array of Note objects\n * @param {boolean} sortByPitch sort chords by pitch? (otherwise sorted\n *      by note start time)\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByOverlap(notes, sortByPitch = true) {\n    if (notes.length < 2) {\n        return [];\n    }\n    const chords = [];\n    let currentChord = [];\n    for (let i = 1; i < notes.length; i++) {\n        const note = notes[i];\n        const previousNote = notes[i - 1];\n        // Check for overlap\n        // TODO: also check the distance from the first note of the chord!\n        if (note.start < previousNote.end) {\n            // If they overlap, add current note to chord\n            // But add previous note first if chord is yet empty!\n            if (currentChord.length === 0) {\n                currentChord.push(previousNote);\n            }\n            currentChord.push(note);\n            // TODO:jump ahead to not count the cord multiple times (partially)\n        } else {\n            // If not, the previous chord is finished\n            if (currentChord.length > 0) {\n                // Sort chord by pitch?\n                if (sortByPitch) {\n                    currentChord = currentChord.sort((a, b) => a.pitch - b.pitch);\n                }\n                chords.push(currentChord);\n                currentChord = [];\n            }\n        }\n    }\n    return chords;\n}\n\n/**\n * Detects chords as those notes that have the exact same start time, only works\n * for ground truth (since recordings are not exact)\n * Does only work if groundtruth is aligned! TuxGuitar produces unaligned MIDI.\n * @param {Note[]} notes\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByExactStart(notes) {\n    const grouped = group(notes, d => d.start);\n    const chords = Array.from(grouped)\n        .map(d => d[1])\n        // Remove single notes\n        .filter(d => d.length > 1)\n        // Sort chords by time\n        .sort((a, b) => a[0].start - b[0].start)\n        // Sort notes in each chord by pitch\n        .map(chord => chord.sort((a, b) => a.pitch - b.pitch));\n    return chords;\n}\n\n/**\n * TODO:\n * Maps number of steps (number of notes -1) to possible chord types\n */\nconst chordTypes = new Map([\n    [\n        1,\n        [\n            // TODO: how to handle inversions?\n            { steps: [5], name: \"Inverted power chord\", suffix: \"?\" },\n            { steps: [7], name: \"Power chord\", suffix: \"5\" },\n        ]\n    ],\n    [\n        2,\n        [\n            { steps: [2, 7], name: \"Suspended second\", suffix: \"sus2\" },\n            { steps: [3, 6], name: \"Diminished\", suffix: \"dim\" },\n            { steps: [3, 7], name: \"Minor\", suffix: \"min\" },\n            { steps: [4, 10], name: \"Seventh\", suffix: \"7\" },\n            { steps: [4, 7], name: \"Major\", suffix: \"\" },\n            { steps: [4, 8], name: \"Augmented\", suffix: \"aug\" },\n            { steps: [4, 9], name: \"Sixth\", suffix: \"6\" },\n            { steps: [5, 7], name: \"Suspended fourth\", suffix: \"sus4\" },\n        ]\n    ],\n    [\n        3,\n        [\n            { steps: [2, 3, 7], name: \"Minor, added ninth\", suffix: \"m(add9)\" },\n            { steps: [2, 4, 7], name: \"Added ninth\", suffix: \"add9\" },\n            { steps: [3, 6, 10], name: \"Minor seventh, flat fifth\", suffix: \"m7b5\" },\n            { steps: [3, 7, 10], name: \"Minor seventh\", suffix: \"m7\" },\n            { steps: [3, 7, 11], name: \"Minor, major seventh\", suffix: \"m(Maj7)\" },\n            { steps: [3, 7, 8], name: \"Minor, flat sixth\", suffix: \"mb6\" },\n            { steps: [3, 7, 9], name: \"Minor sixth\", suffix: \"m6\" },\n            { steps: [4, 5, 11], name: \"Major eleventh (no fifth, no ninth)\", suffix: \"Maj11\" },\n            { steps: [4, 5, 7], name: \"Added fourth\", suffix: \"add4\" },\n            { steps: [4, 7, 10], name: \"Dominant seventh\", suffix: \"7\" },\n            { steps: [4, 7, 11], name: \"Major seventh\", suffix: \"Maj7\" },\n            { steps: [4, 7, 9], name: \"Major Sixth\", suffix: \"Maj6\" },\n        ]\n    ],\n    [\n        4,\n        [\n            { steps: [2, 3, 6, 10], name: \"Minor ninth flat fifth\", suffix: \"m9b5\" },\n            { steps: [2, 3, 7, 10], name: \"Minor ninth\", suffix: \"m9\" },\n            { steps: [2, 3, 7, 11], name: \"Minor ninth, major seventh\", suffix: \"m9(Maj7)\" },\n            { steps: [2, 3, 7, 9], name: \"Minor sixth, added ninth\", suffix: \"m6/9\" },\n            { steps: [2, 4, 7, 11], name: \"Major ninth\", suffix: \"Maj9\" },\n            { steps: [2, 4, 7, 9], name: \"Sixth, added ninth\", suffix: \"6/9\" },\n            { steps: [4, 5, 7, 11], name: \"Major eleventh (no ninth)\", suffix: \"Maj11\" },\n            { steps: [4, 6, 7, 10], name: \"Seventh, sharp eleventh\", suffix: \"7#11\" },\n            { steps: [4, 6, 7, 11], name: \"Major seventh, sharp eleventh\", suffix: \"Maj7#11\" },\n        ]\n    ],\n    [\n        5,\n        [\n            { steps: [2, 4, 5, 7, 11], name: \"Major eleventh\", suffix: \"Maj11\" },\n            { steps: [2, 4, 7, 9, 11], name: \"Major thirteen\", suffix: \"Maj13\" },\n        ]\n    ],\n    [\n        6,\n        [\n            { steps: [2, 3, 4, 6, 7, 10], name: \"Minor thirteen\", suffix: \"m13\" },\n        ]\n    ]\n]);\n\n/**\n * Returns chord type, e.g. 'Major', 'Diminished', ...\n * Important: Notes must be sorted by pitch ascending\n * TODO: some chords might be multiple types\n * @param {Note[]} notes notes (sorted by pitch asc.)\n * @returns {string} chord type\n */\nexport function getChordType(notes) {\n    if (notes.length === 0) { return { name: 'No note' }; }\n    if (notes.length === 1) { return { name: 'Single note' }; }\n    // Get distances in semitones\n    let steps = [];\n    const lowest = notes[0].pitch;\n    for (let i = 1; i < notes.length; i++) {\n        steps.push(notes[i].pitch - lowest);\n    }\n    // Normalize higher than octave\n    steps = steps.map(d => d % 12);\n    // Filter octaves\n    steps = steps.filter(d => d !== 0);\n    // Filter doubles\n    steps = Array.from(new Set(steps));\n    if (steps.length === 0) { return { name: 'Octave' }; }\n    steps.sort((a, b) => a - b);\n\n    // Now get the chord type\n    const candidates = chordTypes.get(steps.length);\n    for (const cand of candidates) {\n        if (arrayShallowEquals(steps, cand.steps)) {\n            return cand;\n        }\n    }\n    return { name: 'Unknown chord type' };\n}\n\n/**\n * https://github.com/tonaljs/tonal/tree/master/packages/chord\n * Detected chords can be used with https://github.com/tonaljs/tonal/tree/master/packages/chord-type\n * @param {Note[]} notes\n * @returns {String[]} possible chord types\n */\nexport function getCHordType2(notes) {\n    const noteLetters = notes.map(d => d.getLetter());\n    return Chord.detect(noteLetters);\n}\n\n/**\n * TODO:\n * Test for getChordType()\n */\nexport function testGetChordType() {\n    const cases = [\n        {\n            notes: [{ pitch: 0 }, { pitch: 7 }],\n            result: 'Power chord'\n        },\n        {\n            notes: [{ pitch: 10 }, { pitch: 17 }],\n            result: 'Power chord'\n        },\n        {\n            notes: [{ pitch: 0 }, { pitch: 2 }, { pitch: 3 }, { pitch: 7 }],\n            result: 'Minor, added ninth'\n        },\n        {\n            notes: [{ pitch: 0 }, { pitch: 7 }, { pitch: 12 }],\n            result: 'Power chord'\n        },\n\n    ];\n    for (const c of cases) {\n        const result = getChordType(c.notes);\n        if (result !== c.result) {\n            console.warn(`Invalid chord result, expected ${c.result}, got ${result}`);\n        }\n    }\n}\n\n/**\n * Estimates the name of a given chord of notes\n * @param {Note[]} notes array of Note objects\n * @returns {string} chord name\n * TODO: use tonaljs\n * TODO: use this https://github.com/greird/chordictionaryjs\n */\nexport function getChordName(notes) {\n    console.error('NIY');\n}\n\n\n/**\n * Estimates the name of a given chord of notes\n * @param {string} chord name\n * @return {Note[]} notes array of Note objects\n * TODO: use tonaljs\n * TODO: use this https://github.com/greird/chordictionaryjs\n */\nexport function getNotesFromChordName(name, length = 1, start = 0) {\n    console.error('NIY');\n}\n","import React, { Component } from 'react';\r\nimport './style/App.css';\r\n// Views\r\nimport PianoKeyboard from './components/PianoKeyboard';\r\n// API, data etc.\r\nimport MidiInputManager from './lib/MidiInputManager';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { getCHordType2 } from './lib/Chords';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // Setup MIDI input\r\n        new MidiInputManager(\r\n            this.getMidiLiveData,\r\n            this.setMidiLiveData,\r\n            this.addCurrentNote,\r\n            this.removeCurrentNote\r\n        );\r\n        this.state = {\r\n            viewSize: {\r\n                outerWidth: 800,\r\n                outerHeight: 600\r\n            },\r\n            midiLiveData: [],\r\n            currentNotes: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Scale layout to current screen size\r\n        window.addEventListener('resize', this.onResize, false);\r\n        this.onResize();\r\n    }\r\n\r\n    /**\r\n     * Updates the size state when the window size changes\r\n     * so views can react and redraw\r\n     */\r\n    onResize = () => {\r\n        const w = Math.floor(window.innerWidth - 10);\r\n        this.setState({\r\n            viewSize: {\r\n                outerWidth: w,\r\n                // outerHeight: Math.floor(window.innerHeight - 100)\r\n                outerHeight: Math.floor(Math.min(w / 4, window.innerHeight - 200))\r\n            }\r\n        });\r\n    }\r\n\r\n    getMidiLiveData = () => this.state.midiLiveData;\r\n\r\n    /**\r\n     * Setter for MIDI input from an instrumetn\r\n     * @param {Note[]} data array with notes\r\n     */\r\n    setMidiLiveData = (data) => {\r\n        // Work-around so note_off event handling can immediately find the note_on event\r\n        // eslint-disable-next-line\r\n        this.state.midiLiveData = data;\r\n        this.setState({ midiLiveData: data });\r\n    };\r\n\r\n    /**\r\n     * Adds a note that is currently played (e.g. keyboard key pressed)\r\n     * @param {Note} note a note\r\n     */\r\n    addCurrentNote = (note) => {\r\n        const newMap = new Map(this.state.currentNotes);\r\n        newMap.set(note.pitch, note);\r\n        this.setState({ currentNotes: newMap });\r\n    }\r\n\r\n    /**\r\n     * Removes a currently played note (e.g. keyboard key no longer pressed)\r\n     * @param {number} pitch pitch of the note to remove\r\n     */\r\n    removeCurrentNote = (pitch) => {\r\n        const newMap = new Map(this.state.currentNotes);\r\n        newMap.delete(pitch);\r\n        this.setState({ currentNotes: newMap });\r\n    }\r\n\r\n    render() {\r\n        const s = this.state;\r\n        const notes = Array.from(s.currentNotes.values())\r\n            .sort((a, b) => a.pitch - b.pitch);\r\n        // const chord = getChordType(notes);\r\n        // console.log(chord);\r\n        const chord2 = getCHordType2(notes);\r\n        console.log(chord2);\r\n        return (\r\n            <div className={`App dark`} >\r\n                <div className='chordInfo'>\r\n                    <div>\r\n                        {Array.from(notes)\r\n                            .map(d => d.getName())\r\n                            .join(' ')}\r\n                    </div>\r\n                    {/* <div>\r\n                        Type: {chord.name}\r\n                    </div> */}\r\n                    <div>\r\n                        Chord name: {chord2.join(', ')}\r\n                    </div>\r\n                </div>\r\n                <div className='explanation'>\r\n                    <span>\r\n                        <FontAwesomeIcon icon={faInfoCircle} />&nbsp;\r\n                        Connect a MIDI device and play some notes to see the chord type.\r\n                    </span>\r\n                </div>\r\n                <PianoKeyboard\r\n                    name='Piano Keyboard'\r\n                    viewSize={s.viewSize}\r\n                    theme='dark'\r\n                    currentNotes={s.currentNotes}\r\n                />\r\n                <div className='githubLink'>\r\n                    <p>\r\n                        <a href='https://github.com/fheyen/midi-chords'>\r\n                            <FontAwesomeIcon icon={faGithub} />&nbsp;\r\n                            https://github.com/fheyen/midi-chords\r\n                        </a>\r\n                    </p>\r\n                    <p>\r\n                        Using&nbsp;\r\n                        <a href='https://github.com/tonaljs/tonal/tree/master/packages/chord-detect'>\r\n                            tonaljs\r\n                        </a>.\r\n                    </p>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}